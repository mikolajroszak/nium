// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.video.transcode.v1alpha;

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/video/transcode/v1alpha;transcode";
option java_multiple_files = true;
option java_package = "com.google.cloud.video.transcode.v1alpha";


message Job {
  message AdBreak {
    // The begin time in seconds relative to the input video which the ad will
    // be add to.
    int32 begin = 1;

    // (optional) End timestamp of ad break. Specifying an end timestamp implies
    // that the input file has burnt-in ad spots. These are typically used in
    // preserving advertisements in case of C3/D4 scenarios and automatically
    // switching from C3 to D4 when the time comes.
    int32 end = 2;
  }

  message Caption {
    // The URL of input subtitle file. Supported caption formats are scc, smpte,
    // srt.
    string url = 1;

    // (Optional). Three letter ISO 639-2 code of the language. Defaults to eng.
    string lang = 2;
  }

  message Input {
    // The URL of the input video in form of `gs://{bucket_name}/{object_path}`
    string url = 1;

    // Audio_map specifies a channel mapping that allows flexible
    // selection of the input channel and tracks to output. For each output
    // track, an array entry should be specified as <track idx>.<channel
    // idx>.<br>
    // For example, to map a 5.1 audio channel's 2nd and 4th channels as left
    // and right, use [0.2, 0.4].<br/>
    // To use an MXF input and to select track 4 as left and track 7 as right,
    // use [4.0, 7.0].<br>
    // Note that indexes are 0 based.<br>
    // Multiple audio-maps can be defined by using an array of arrays as
    // audio_map. For example, for an MXF input with 8 track mono audio, if one
    // of the outputs is stereo and if one of the outputs is 5.1, than you can
    // specify the following for your input audio_map: [[4.0, 7.0],[5.0,
    // 6.0, 1.0, 4.0, 3.0]].<br>
    // If specify "audio_map" : "itu", the output will be 5.1 to stereo down-mix
    // as specified by the ITU standard.
    google.protobuf.Any audio_map = 2;

    // (Optional) Begin timestamp of the desired part in video file. If not
    // specified, encoder starts from the beginning of the file.
    int32 begin = 3;

    // (Optional) End timestamp of the desired part in video file. If not
    // specified, encoder ends at the end of the shortest stream in the file.
    int32 end = 4;

    // (Optional) The adbreak locations. If the ads also burned in/included in
    // the file, you can also specify the duration.
    repeated AdBreak adbreaks = 5;

    // The captions which will be added to the output video.
    repeated Caption captions = 6;
  }

  message Report {
    message Output {
      // The url of this output video in form of
      // `gs://{bucket_name}/{video_path}`.
      string url = 1;

      // The resolution of this output video, e.g. '1280x720'.
      string resolution = 2;

      // The format of this output video links, such as 'video/mp4',
      // 'application/json', 'application/x-mpegURL', 'application/dash+xml'...
      string format = 3;

      // The maximum bitrate of this output video
      int32 max_bitrate = 4;

      // The average bitrate of this output video
      int32 avg_bitrate = 5;

      // The average bitrate of this output video.
      string bitrate = 6;

      // The codecs of this output video, sucha as 'mp4a.40.2, avc1.64001e',
      // 'avc1.64001e, mp4a.40.2'...
      string codecs = 7;
    }

    message Durations {
      // The length of input video which is transcoded.
      google.protobuf.Duration input_video_duration = 1;

      // The time spent on video downloading during transcoding.
      google.protobuf.Duration download_duration = 2;

      // The time spent on video encoding during transcoding.
      google.protobuf.Duration encode_duration = 3;

      // The time spent on video uploading during transcoding.
      google.protobuf.Duration upload_duration = 4;
    }

    // The output videos.
    repeated Output outputs = 1;

    // The time spent on video downloading, encoding, uploading during
    // transcoding.
    Durations durations = 2;

    // If job fails, the failing reason will be reported as comments field.
    string comments = 3;
  }

  message Analysis {
    message Track {
      // The type of the track, such as general, audio, video, caption...
      string type = 1;

      // The format of the track, such as MPEG-4, AVC, AAC...
      string format = 2;

      // The content type of the track, such as video/mp4, video/H264...
      string content_type = 3;

      // The name of the track, such as MPEG-4, AVC, AAC...
      string name = 4;

      // The codec ID of the track, such as isom, avc1, 40...
      string codec_id = 5;

      // The codec of the track, such as MPEG-4, AVC, AAC LC...
      string codec = 6;

      // The duration of the track, precise to miliseconds.
      string duration = 7;

      // The frame rate of the track.
      string frame_rate = 8;

      // The format profile of the track, such as 'Base media', 'Main@L3.1',
      // 'LC'...
      string format_profile = 9;

      // The codec profile of the track, such as 'Main@L3.1'...
      string codec_profile = 10;

      // The overall bit rate of the track.
      string overall_bit_rate = 11;

      // The display aspect ration of the track, e.g. 16:9
      string display_aspect_ratio = 12;

      // The number of channels of audio track.
      string channels = 13;

      // The channel positions of audio track, e.g. "3/2/0.1".
      string channel_positions = 14;

      // The channel layout of audio track, e.g. "C L R Ls Rs LFE".
      string channel_layout = 15;

      // The bitrate of the track.
      string bitrate = 16;

      // The width of video track.
      string width = 17;

      // The height of video track.
      string height = 18;

      // The height of audio track.
      string sampling_rate = 19;
    }

    // Tracks of input video from mediainfo analysis.
    repeated Track tracks = 1;
  }

  // The resource name of the transcode job.<br>
  // Transcoding job names have the form
  // `projects/{project_id}/jobs/{job_id}`. The name is ignored when creating
  // a transcode job.
  string name = 1;

  // The descriptive name for this transcode job.
  string display_name = 2;

  // Specifications of input video. At least the URL field should be specified.
  Input input = 3;

  // The google cloud bucket and folder in form of
  // `gs://{bucket_name}/{folder_path}` that will hold the files created
  // according to the specified encode_profile_id.
  string output = 4;

  // The encode profile id returned in the 'name' field of create or update
  // encode profile response.
  string encode_profile_id = 5;

  // The branding profile id returned in the 'name' field of create or update
  // branding profile response.
  string branding_profile_id = 6;

  // The DRM profile id returned in the 'name' field of create or update
  // DRM profile response.
  string drm_profile_id = 7;

  // The url you want to request after transcode job is done.
  string notification_url = 8;

  // The encrypt key for DRM.
  string encrypt_key = 9;

  // The encrypt key id for DRM.
  string encrypt_key_id = 10;

  // The transcode job progress in percentage relative to the current state.<br>
  // E.g. 50% when state is 'analyzing' does not mean 50% of the whole
  // transcoding job has been done, but means 50% of analyzing has been done.
  // Available only in GetJobResponse. Ignore when creating a transcode job.
  string progress = 11;

  // The report of the transcode job which include information about output
  // videos, download, encode, upload durations... Available only in
  // GetJobResponse. Ignore when creating a transcode job.
  Report report = 13;

  // The current state of the transcode job. It can be pending, analyzing,
  // downloading, encoding, uploading, complete-error, complete-success or
  // cancelled.<br>
  // Output only.
  // Ignore when creating a transcode job.
  string state = 14;

  // The time when the transcode job is created.<br>
  // Output only.
  // Ignore when creating a transcode job.
  google.protobuf.Timestamp create_time = 15;

  // The time when the transcode job is complete.<br>
  // Output only.
  // Ignore when creating a transcode job.
  google.protobuf.Timestamp complete_time = 16;

  // The analysis of the input video.<br>
  // Available only in GetJobResponse. Ignore when creating a transcode job.
  map<string, Analysis> analysis = 17;
}
