// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.securitycenter.v1alpha3;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "google.golang.org/genproto/googleapis/cloud/securitycenter/v1alpha3;securitycenter";
option java_package = "com.google.cloud.securitycenter.v1alpha3";


// Representation of a Google Cloud Platform asset. Examples of assets include:
// App Engine Application, Project, Bucket, etc.
message Asset {
  // State of the asset.
  //
  // When querying across two points in time this describes
  // the change between the two points: NOT_FOUND, ADDED, REMOVED, or
  // ACTIVE_AT_BOTH.
  //
  // When querying for a single point in time this describes the
  // state at that time: NOT_FOUND, ACTIVE, REMOVED.
  enum State {
    // Invalid state.
    STATE_UNSPECIFIED = 0;

    // Asset was active for the point in time.
    ACTIVE = 1;

    // Asset was not found for the point(s) in time.
    NOT_FOUND = 2;

    // Asset was added between the points in time.
    ADDED = 3;

    // Asset was removed between the points in time.
    REMOVED = 4;

    // Asset was active at both point(s) in time.
    ACTIVE_AT_BOTH = 5;
  }

  // Unique identifier for this asset. This identifier persists following
  // modification/deletion/recreation.
  string id = 1;

  // Unique identifier for this asset's parent. For example, a Project's parent
  // would be either the organization it belongs to OR the folder it resides in.
  string parent_id = 2;

  // The type of asset. Examples include: APPLICATION, PROJECT, ORGANIZATION,
  // etc.
  string type = 3;

  // Owners of the asset. Commonly represented as email addresses.
  repeated string owners = 4;

  // The time at which the asset has been last updated, added or deleted in
  // CSCC.
  google.protobuf.Timestamp update_time = 8;

  // State of the asset.
  State state = 5;

  // Properties associated with the asset.
  google.protobuf.Struct properties = 6;

  // User specified marks placed on the asset.
  map<string, string> marks = 7;
}

// Request message for SearchAssets.
message SearchAssetsRequest {
  // Name of the organization to search for assets. Its format is
  // "organizations/[organization_id]". For example, "organizations/1234".
  string org_name = 1;

  // Expression that defines the query to apply across assets.
  string query = 2;

  // Expression that defines what fields and order to use for sorting.
  string order_by = 3;

  // Time at which to search for assets. The search will capture the state of
  // assets at this point in time.
  //
  // Not providing a value or providing one in the future is treated as current.
  google.protobuf.Timestamp reference_time = 4;

  // When compare_duration is set, the Asset's "state" attribute is updated to
  // indicate whether the asset was added, removed or remained present over the
  // compare_duration period of time preceding reference_time, i.e. between
  // (reference_time - compare_duration) and reference_time. Note that the state
  // value is derived based on the presence of the asset at the two points in
  // time. Intermediate state changes between the two points in time (e.g. the
  // asset is removed and re-created again) do not affect the result.
  //
  // Possible "state" values when compare_duration is specified:
  //  - "ADDED" - indicates that the asset was not present before
  //              compare_duration, but present at reference_time.
  //  - "REMOVED" - indicates that the asset was present at the start of
  //              compare_duration, but not present at reference_time.
  //  - "ACTIVE_AT_BOTH" - indicates that the asset was present at both the
  //              start and the end of the time period defined by
  //              compare_duration and reference_time.
  // If compare_duration is not specified, then the only possible state is
  //  - "ACTIVE" - indicates that the asset is present at reference_time.
  google.protobuf.Duration compare_duration = 5;

  // Optional pagination token returned in an earlier call.
  string page_token = 6;

  // The maximum number of results to return in a single response.
  int32 page_size = 7;
}

// Response message for SearchAssets.
message SearchAssetsResponse {
  // Assets returned by the request.
  repeated Asset assets = 1;

  // Token to retrieve the next page of results, or empty if there are no more
  // results.
  string next_page_token = 2;

  // The total number of results available.
  uint64 total_size = 3;

  // Time provided for reference_time in the request.
  google.protobuf.Timestamp reference_time = 4;

  // Time provided for compare_duration in the request.
  google.protobuf.Duration compare_duration = 5;
}

// Request message for modifying the marks on an asset.
message ModifyAssetRequest {
  // Organization name.
  string org_name = 1;

  // Unique identifier for the asset to be modified.
  string id = 2;

  // Keys and values to add/update on the asset.
  //
  // If a mark with the same key already exists, its value will be replaced by
  // the updated value.
  map<string, string> add_or_update_marks = 3;

  // A list of keys defining the marks to remove from the asset. There can be no
  // overlaps between keys to remove and keys to add or update.
  repeated string remove_marks_with_keys = 4;
}
