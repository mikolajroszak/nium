// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.android.overtheair.v1;

import "google/android/overtheair/v1/overtheair_data.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "google.golang.org/genproto/googleapis/android/overtheair/v1;overtheair";
option java_multiple_files = true;
option java_outer_classname = "OverTheAirServiceMessagesProto";
option java_package = "com.google.android.overtheair.v1";
option csharp_namespace = 'Google.Android.OverTheAir.V1';


// Request message for OverTheAirService.GetDeployment.
message GetDeploymentRequest {
  // Relative resource name.  For example: "deployments/deployment_x"
  string name = 1;

  // Optional. Specify whether basic or detailed information of the deployment
  // should be returned.
  View view = 2;
}

// Request message for OverTheAirService.ListDeployments.
message ListDeploymentsRequest {
  // Optional. Specify whether basic or detailed information of each deployment
  // should be returned.
  View view = 1;
}

// Response message for OverTheAirService.ListDeployments.
message ListDeploymentsResponse {
  // The list of deployments.
  repeated Deployment deployments = 1;
}

// Request message for OverTheAirService.UpdateDeployment.
message UpdateDeploymentRequest {
  // Relative resource name.  For example: "deployments/deployment_x"
  string name = 1;

  // Required. Only the deployment description can be updated.
  Deployment deployment = 2;

  // Required. The deployment to be updated should match this version.
  // If another client updates the existing instance concurrently, this
  // update operation will fail.
  VersionTag version_tag = 3;
}

// Request message for OverTheAirService.CreateConfig.
message CreateConfigRequest {
  // Relative resource name.  For example: "deployments/deployment_x"
  string name = 1;

  // Required. The [Config][google.android.overtheair.v1.Config] to create.
  Config config = 2;
}

// Request message for OverTheAirService.GetConfig.
message GetConfigRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/configs/config_a"
  string name = 1;

  // Optional. Specify whether basic or detailed information of the config
  // should be returned.
  View view = 2;
}

// Request message for OverTheAirService.ListConfigs.
message ListConfigsRequest {
  // Relative resource name.  For example: "deployments/deployment_x"
  string name = 1;

  // Optional. Specify whether basic or detailed information of each config
  // should be returned.
  View view = 2;
}

// Response message for OverTheAirService.ListConfigs.
message ListConfigsResponse {
  // The list of configs.
  repeated Config configs = 1;
}

// Request message for OverTheAirService.UpdateConfig.
message UpdateConfigRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/configs/config_a"
  string name = 1;

  // The [Config][google.android.overtheair.v1.Config] to update.
  Config config = 2;

  // Required. The config to be updated should match this version.
  // If another client updates the existing config concurrently, the
  // update operation will fail.
  VersionTag version_tag = 3;
}

// Request message for OverTheAirService.DeleteConfig.
message DeleteConfigRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/configs/config_a"
  string name = 1;
}

// Response message for OverTheAirService.DeleteConfig.
message DeleteConfigResponse {

}

// Request message for OverTheAirService.GetPackage.
message GetPackageRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/packages/package_a"
  string name = 1;

  // Optional. Specify whether basic or detailed information of the package
  // should be returned.
  View view = 2;
}

// Request message for OverTheAirService.ListPackages.
message ListPackagesRequest {
  // Relative resource name.  For example: "deployments/deployment_x"
  string name = 1;

  // Optional. Specify whether basic or detailed information of each package
  // should be returned.
  View view = 2;
}

// Response message for OverTheAirService.ListPackages.
message ListPackagesResponse {
  // The list of packages.
  repeated Package packages = 1;
}

// Request message for OverTheAirService.DeletePackage.
message DeletePackageRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/packages/package_a"
  string name = 1;
}

// Response message for OverTheAirService.DeletePackage.
message DeletePackageResponse {

}

// Request message for OverTheAirService.UpdatePackage.
message UpdatePackageRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/packages/package_a"
  string name = 1;

  // Required. The [Package][google.android.overtheair.v1.Package] to update.
  Package package_obj = 2;

  // Required. The package to be updated should match this version.
  // If another client updates the existing config concurrently, the
  // update operation will fail.
  VersionTag version_tag = 3;
}

// Request message for OverTheAirService.CreateGroup.
message CreateGroupRequest {
  // Relative resource name.  For example: "deployments/deployment_x"
  string name = 1;

  // Required. The [Group][google.android.overtheair.v1.Group] to create.
  Group group = 2;
}

// Request message for OverTheAirService.UpdateGroup.
message UpdateGroupRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g"
  string name = 1;

  // Required. The [Group][google.android.overtheair.v1.Group] to update.
  Group group = 2;

  // Required. The group to be updated should match this version.
  // If another client updates the existing config concurrently, the
  // update operation will fail.
  VersionTag version_tag = 3;
}

// Request message for OverTheAirService.GetGroup.
message GetGroupRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g"
  string name = 1;

  // Optional. Specify whether basic or detailed information of the group
  // should be returned.
  View view = 2;
}

// Request message for OverTheAirService.ListGroups.
message ListGroupsRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x"
  string name = 1;

  // Optional. Specify whether basic or detailed information of each group
  // should be returned.
  View view = 2;
}

// Response message for OverTheAirService.ListGroups.
message ListGroupsResponse {
  // The list of groups.
  // Note that `GroupDetails` will not contain `members` due to size issues.
  // If you require `members`, we recommend that you load them on-demand, per
  // `Group`.
  repeated Group groups = 1;
}

// Request message for OverTheAirService.DeleteGroup.
message DeleteGroupRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g"
  string name = 1;
}

// Response message for OverTheAirService.DeleteGroup.
message DeleteGroupResponse {

}

// Request message for OverTheAirService.DisableGroups.
message DisableGroupsRequest {
  // Relative resource name.  For example: "deployments/deployment_x/groups"
  string name = 1;

  // Required. The groups that should be disabled.
  repeated string group_names = 2;
}

// Response message for OverTheAirService.DisableGroups.
message DisableGroupsResponse {

}

// Request message for OverTheAirService.EnableGroups.
message EnableGroupsRequest {
  // Relative resource name.  For example: "deployments/deployment_x/groups"
  string name = 1;

  // Required. The groups should be enabled.
  repeated string group_names = 2;
}

// Response message for OverTheAirService.EnableGroups.
message EnableGroupsResponse {

}

// Request message for OverTheAirService.CreateGroupMember.
message CreateGroupMemberRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g/members"
  string name = 1;

  // Required. The [group member][google.android.overtheair.v1.GroupMember] to
  // create.
  GroupMember group_member = 2;
}

// Request message for OverTheAirService.CreateGroupMembers.
message CreateGroupMembersRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g/members"
  string name = 1;

  // Required. The list of
  // [group member][google.android.overtheair.v1.GroupMember]s to create.
  // This list is currently limited to no more than 1,000 members.  If you
  // need to create more than that, please send multiple requests.
  repeated GroupMember group_members = 2;
}

// Response message for OverTheAirService.CreateGroupMembers.
message CreateGroupMembersResponse {
  // The members that were created successfully.  This may not match the
  // original input if some members were not able to be created.
  repeated GroupMember group_members = 1;
}

// Request message for OverTheAirService.GetGroupMember.
message GetGroupMemberRequest {
  // Relative resource name.  For example:
  // "deployments/deployment_x/groups/group_g/members/member_m"
  string name = 1;

  // Optional. Specify whether basic or detailed information of the group member
  // should be returned.
  View view = 2;
}

// Request message for OverTheAirService.ListGroupMembers.
message ListGroupMembersRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g/members"
  string name = 1;
}

// Response message for OverTheAirService.ListGroupMembers.
message ListGroupMembersResponse {
  // The list of group members.
  repeated GroupMember group_members = 1;
}

// Request message for OverTheAirService.DeleteGroupMember.
message DeleteGroupMemberRequest {
  // Relative resource name.  For example:
  // "deployments/deployment_x/groups/group_g/members/member_m"
  string name = 1;
}

// Response message for OverTheAirService.DeleteGroupMember.
message DeleteGroupMemberResponse {

}

// Request message for OverTheAirService.DeleteGroupMembers.
message DeleteGroupMembersRequest {
  // Relative resource name.  For example:
  // "deployments/deployment_x/groups/group_g/members"
  string name = 1;

  // Required. The list of
  // [group member][google.android.overtheair.v1.GroupMember] to delete.
  // This list is currently limited to no more than 1,000 members.  If you
  // need to delete more than that, please send multiple requests.
  repeated GroupMember group_members = 2;
}

// Response message for OverTheAirService.DeleteGroupMembers.
message DeleteGroupMembersResponse {

}

// Chart options for chart requests.
message ChartOptions {
  // Optional. Chart range going back from now. Defaults to a week.
  google.protobuf.Duration range = 1;

  // Optional. Chart resolution. Defaults to hourly.
  Chart.Resolution resolution = 2;

  // Optional.  The maximum number of chart lines that will be returned.
  // If the value is positive and the number of lines is greater than this value,
  // then the lines with smaller values are merged into the last one and
  // will be marked as an aggregate and labeled as "other".
  // For example, if a chart is for active devices by build and there are
  // 25 builds and this number is 10, the 16 builds with the fewest
  // active devices will be aggregated into one line called other.
  // This does not apply to the TYPE_UPDATE_STATE_COUNTS chart type.
  // Defaults to 10.
  int32 max_chart_lines = 3;

  // Optional. The end time for the report. If this value is not set, the end time
  // will be the current time.
  google.protobuf.Timestamp end_time = 4;
}

// Request message for OverTheAirService.GetGroupChart.
message GetGroupChartRequest {
  // Relative resource name.  For example:
  // "deployments/deployment_x/groups/group_g/charts/chart_c"
  string name = 1;

  // Optional. Chart Options.
  ChartOptions options = 2;
}

// Request message for OverTheAirService.ListGroupCharts.
message ListGroupChartsRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g"
  string name = 1;

  // Optional. Chart Options.
  ChartOptions options = 3;

  // Optional. Specify whether basic or detailed information of the group chart
  // should be returned.  Basic data only includes chart names.
  View view = 4;
}

// Response message for OverTheAirService.ListGroupCharts.
message ListGroupChartsResponse {
  // The list of group charts.  Will be empty if there's no data for the
  // requested range.
  repeated Chart charts = 1;
}

// Request message for OverTheAirService.UpdateGroupConfigs.
message UpdateGroupConfigsRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g"
  string name = 1;

  // Required. The names of the configs under the group.
  // Important: the order of configs is important. If a device matches
  // multiple sets of packages across configs, the last matching config wins
  // and will be used.
  repeated string config_names = 2;

  // Required. The group to be updated should match this version.
  // If another client updates the existing group concurrently, the
  // update operation will fail.
  VersionTag version_tag = 3;
}

// Response message for OverTheAirService.UpdateGroupConfigs.
message UpdateGroupConfigsResponse {

}

// Request message for OverTheAirService.ListGroupConfigs.
message ListGroupConfigsRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/groups/group_g"
  string name = 1;
}

// Response message for OverTheAirService.ListGroupConfigs.
message ListGroupConfigsResponse {
  // The list of configs.
  repeated Config configs = 1;

  // The group version.
  VersionTag version_tag = 100;
}

// Request message for OverTheAirService.DisableAllEnabledGroupsOfConfig.
message DisableAllEnabledGroupsOfConfigRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/configs/config_c"
  string name = 1;
}

// Response message for OverTheAirService.DisableAllEnabledGroupsOfConfig.
message DisableAllEnabledGroupsOfConfigResponse {
  // The list of group names that are associated with the specified
  // config and have been disabled in this request processing.
  repeated string group_names = 1;
}

// Request message for OverTheAirService.ListConfigPackagesRequest.
message ListConfigPackagesRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/configs/config_c"
  string name = 1;
}

// Request message for OverTheAirService.UpdateConfigPackages.
message UpdateConfigPackagesRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/configs/config_c"
  string name = 1;

  // Required. The names of the packages under the config.
  repeated PackageConfig package_configs = 2;
}

// Response message for OverTheAirService.UpdateConfigPackages.
message UpdateConfigPackagesResponse {

}

// Response message for OverTheAirService.ListConfigPackages.
message ListConfigPackagesResponse {
  // The list of configs.
  repeated PackageConfig configs = 1;
}

// Request message for OverTheAirService.ListConfigsUsingPackage.
message ListConfigsUsingPackageRequest {
  // Relative resource name.
  // For example: "deployments/deployment_x/packages/package_a"
  string name = 1;
}

// Response message for OverTheAirService.ListConfigsUsingPackage.
message ListConfigsUsingPackageResponse {
  // The list of device config names that are associated with the
  // specified package.
  repeated string config_names = 1;
}

// A view presentation in basic format or detailed format.
enum View {
  // Basic information.
  BASIC = 0;

  // Detailed information.
  DETAILED = 1;
}
